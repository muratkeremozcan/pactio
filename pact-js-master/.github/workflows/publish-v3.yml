name: Publish and release v3 branch

on:
  repository_dispatch:
    types:
      - release-beta-triggered

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      version: v${{ steps.publish.outputs.version }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: feat/v3.0.0
          fetch-depth: 0
      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: "https://registry.npmjs.org"
      - id: publish
        run: scripts/ci/release-beta.sh
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_AUTOMATION_TOKEN}}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: v${{ steps.publish.outputs.version }}
          release_name: Release v${{ steps.publish.outputs.version }}
          body: ${{steps.publish.outputs.notes}}
          draft: false
          prerelease: true

  build-release:
    needs: release
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [10.x, 12.x, 13.x, 14.x]
    steps:
      - uses: actions/checkout@v2
        with:
          ref: feat/v3.0.0
          fetch-depth: 0
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install stable Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Install LLVM
        run: choco install -y llvm
        if: runner.os == 'Windows'
      - run: npm install
      - run: npm run build:v3
      - if: runner.os != 'windows'
        run: rm -rf native/target
      - if: runner.os == 'windows'
        run: Remove-Item 'native\target' -Recurse -Force
      - run: npm run package
      - id: set_package_info
        run: echo "::set-output name=packageJson::$(node ./scripts/native-lib-details.js)"
      - name: Upload Release Assets
        id: upload-release-asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ fromJson(steps.set_package_info.outputs.packageJson).staged_tarball }}
          asset_name: ${{ fromJson(steps.set_package_info.outputs.packageJson).package_name }}
          tag: ${{ needs.release.outputs.version }}

  build-musl-release:
    needs: release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10, 12, 14]
    steps:
      - uses: actions/checkout@v2
        with:
          ref: feat/v3.0.0
          fetch-depth: 0
      - id: set_package_info
        run: docker run --rm -e LOCAL_USER_ID=`id -u $USER` -v $(pwd):/workspace -t pactfoundation/pact-js-musl:${{ matrix.node-version }}
      - name: Upload Release Assets
        id: upload-release-asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ fromJson(steps.set_package_info.outputs.packageJson).staged_tarball }}
          asset_name: ${{ fromJson(steps.set_package_info.outputs.packageJson).package_name }}
          tag: ${{ needs.release.outputs.version }}
